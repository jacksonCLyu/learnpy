# _ *  coding: utf-8 _ * _
__author__ = "young"

import re

line = "xxx出生于2001年10月1日"
# line = "xxx出生于2001/10/1"
# line = "xxx出生于2001-10-1"
# line = "xxx出生于2001-10-01"
# line = "xxx出生于2001/10/01"
# line = "xxx出生于2001-10"
# line = "xxx出生于2001-10月"
# 注意顺序
regex_str = ".*?(\d{2,4}[年/-]\d{1,2}([月/-]\d{1,2}日*|[月/-]$|$))"
match_obj = re.match(regex_str, line)
if match_obj:
    print(match_obj.group(1))
else:
    print("no")

# ^: 以后面的字符(可以是字符串)开始
# .: 可以匹配所有字符(范围很大)
# *: 前面的字符可以出现任意次数(>=0)
# +: 类似*号,匹配前一个字符出现至少一次(>=1)
# ?: 切换成非贪婪模式(匹配的是后一个字符,顺序由左到右)
# {}: 两个参数,第一个是匹配前面字符出现的最小次数,第二个是匹配前面字符出现的最多次数
# |: 或者的关系,匹配左右边的某一个

# []: 高级:1) 区间例如 0-9 a-z
#          2) 中括号中任意字符出现都可以
#          3) 中括号中的特殊字符没有特殊含义了 ^代表非

# \s \S: \s表示空格 \S表示不为空格都可以 注意:\s \S都匹配一个字符 可以和+ * 配合使用

# \w \W: [a-zA-Z0-9_] 可以用\w来代替 \W:除了小w满足不了的,W都可以满足

# [\u4E00-\u9FA5]: 匹配中文

# \d: 匹配数字